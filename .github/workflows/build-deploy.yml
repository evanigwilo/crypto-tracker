name: Build, Test & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: c-hive/gha-yarn-cache@v2
      # uses: actions/cache@v3
      # env:
      #   cache-name: cache-node-modules
      # with:
      #   # npm cache files are stored in `~/.npm` on Linux/macOS
      #   path: ~/.npm
      #   key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #   restore-keys: |
      #     ${{ runner.os }}-build-${{ env.cache-name }}-
      #     ${{ runner.os }}-build-
      #     ${{ runner.os }}-

    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Use Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
        cache: 'yarn'
    
    - name: Install NPM packages
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: yarn install
    
    - name: Run tests
      run: yarn run test

    - name: Build project
      run: yarn run build
      env:
        CI: false

    - name: Upload production-ready build files
      uses: actions/upload-artifact@v2
      with:
        name: production-files
        path: ./build
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: production-files
        path: ./build

    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build